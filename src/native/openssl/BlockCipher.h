/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher */

#ifndef _Included_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
#define _Included_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_aes_128_ecb
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1aes_1128_1ecb
  (JNIEnv *, jclass);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CIPHER_block_size
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CIPHER_1block_1size
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CIPHER_CTX_cleanup
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CIPHER_1CTX_1cleanup
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CIPHER_CTX_create
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CIPHER_1CTX_1create
  (JNIEnv *, jclass);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CIPHER_CTX_destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CIPHER_1CTX_1destroy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CIPHER_CTX_set_padding
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CIPHER_1CTX_1set_1padding
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CipherFinal_ex
 * Signature: (J[BII)I
 */
JNIEXPORT jint JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CipherFinal_1ex
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CipherInit_ex
 * Signature: (JJJ[B[BI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CipherInit_1ex
  (JNIEnv *, jclass, jlong, jlong, jlong, jbyteArray, jbyteArray, jint);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CipherUpdate
 * Signature: (J[BII[BII)I
 */
JNIEXPORT jint JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CipherUpdate__J_3BII_3BII
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_CipherUpdate
 * Signature: (JLjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1CipherUpdate__JLjava_nio_ByteBuffer_2IILjava_nio_ByteBuffer_2II
  (JNIEnv *, jclass, jlong, jobject, jint, jint, jobject, jint, jint);

/*
 * Class:     org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher
 * Method:    EVP_get_cipherbyname
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_jitsi_impl_neomedia_transform_srtp_OpenSSLBlockCipher_EVP_1get_1cipherbyname
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
